[package]
name = "cabin"
version = "0.1.0"
description = "A dead simple, extremely performant, and completely safe programming language."
authors = ["Violet Iapalucci"]
license = "LGPL-3.0"
repository = "https://github.com/cabin-language/cabin"
issues = "https://github.com/cabin-language/cabin/issues"
categories = ["command-line-utilities", "compilers", "parser-implementations"]
keywords = ["cabin", "language", "compiler"]
readme = "README.md"
edition = "2021"

[dependencies]
anyhow = "1.0.93"
clap = { version = "4.5.21", features = ["derive"] }
colored = "2.1.0"
convert_case = "0.6.0"
enum_dispatch = "0.3.13"
expression-formatter = "0.1.0"
paste = "1.0.15"
pathdiff = "0.2.2"
phf = { version = "0.11.2", features = ["macros"] }
regex-macro = "0.2.0"
semver = "1.0.23"
strum = "0.26.3"
strum_macros = "0.26.4"
toml_edit = "0.22.22"
try_as = "0.1.0"
unindent = "0.2.3"

[package.metadata.commands]
run = "cargo run -q -- run"
run-prelude = "cargo run -q -- run std/prelude.cabin"

[lints.rust]
absolute_paths_not_starting_with_crate = "warn"
keyword_idents_2018 = "forbid"
keyword_idents_2024 = "forbid"
macro_use_extern_crate = "warn"
meta_variable_misuse = "forbid"
non_ascii_idents = "forbid"
redundant_imports = "warn"
redundant_lifetimes = "warn"
single_use_lifetimes = "warn"
trivial_numeric_casts = "warn"
unnameable_types = "warn"
unsafe_code = "deny"
unused_crate_dependencies = "forbid"
unused_extern_crates = "forbid"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_macro_rules = "warn"
unused_qualifications = "warn"
unused_results = "warn"

[lints.clippy]
assigning_clones = "allow"
tabs_in_doc_comments = "allow"
blocks_in_conditions = "allow"
doc_lazy_continuation = "allow"
result_large_err = "allow"
alloc_instead_of_core = "warn"
allow_attributes_without_reason = "warn"
as_underscore = "warn"
assertions_on_result_states = "warn"
bool_to_int_with_if = "warn"
branches_sharing_code = "warn"
cargo_common_metadata = "warn"
clear_with_drain = "warn"
clone_on_ref_ptr = "warn"
cloned_instead_of_copied = "warn"
collection_is_never_read = "deny"
create_dir = "warn"
declare_interior_mutable_const = "deny"
default_constructed_unit_structs = "warn"
default_trait_access = "warn"
deref_by_slicing = "warn"
doc_markdown = "warn"
empty_enum = "deny"
empty_enum_variants_with_brackets = "warn"
empty_structs_with_brackets = "warn"
enum_glob_use = "warn"
equatable_if_let = "warn"
exit = "deny"
expect_used = "warn"
expl_impl_clone_on_copy = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
fallible_impl_from = "deny"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp = "deny"
float_cmp_const = "deny"
fn_to_numeric_cast_any = "deny"
format_push_string = "warn"
if_not_else = "warn"
imprecise_flops = "warn"
index_refutable_slice = "warn"
indexing_slicing = "warn"
infinite_loop = "deny"
integer_division = "warn"
iter_filter_is_ok = "warn"
iter_filter_is_some = "warn"
iter_not_returning_iterator = "warn"
iter_on_empty_collections = "warn"
iter_on_single_items = "warn"
iter_with_drain = "warn"
large_digit_groups = "warn"
let_underscore_must_use = "deny"
linkedlist = "warn"
macro_use_imports = "warn"
manual_assert = "warn"
manual_instant_elapsed = "warn"
manual_is_power_of_two = "warn"
manual_main_separator_str = "warn"
manual_ok_or = "warn"
manual_string_new = "warn"
many_single_char_names = "warn"
map_unwrap_or = "warn"
map_with_unused_argument_over_ranges = "warn"
match_bool = "warn"
match_same_arms = "warn"
match_wildcard_for_single_variants = "warn"
maybe_infinite_iter = "warn"
mismatching_type_param_order = "warn"
missing_assert_message = "warn"
missing_const_for_fn = "warn"
# missing_docs_in_private_items = "warn"
missing_errors_doc = "warn"
mixed_read_write_in_expression = "deny"
multiple_inherent_impl = "warn"
mut_mut = "warn"
mutex_atomic = "deny"
mutex_integer = "deny"
needless_bitwise_bool = "warn"
needless_collect = "warn"
needless_continue = "warn"
needless_for_each = "warn"
needless_pass_by_ref_mut = "warn"
needless_pass_by_body = "warn"
needless_raw_string_hashes = "warn"
negative_feature_names = "warn"
no_effect_underscore_binding = "warn"
non_zero_suggestions = "warn"
nonstandard_macro_braces = "warn"
option_as_ref_cloned = "warn"
option_option = "warn"
or_fun_call = "warn"
panic = "deny"
path_buf_push_overwrite = "warn"
pathbuf_init_then_push = "warn"
pub_underscore_fields = "warn"
range_minus_one = "warn"
range_plus_one = "warn"
rc_mutex = "warn"
read_zero_byte_vec = "warn"
redundant_clone = "warn"
redundant_else = "warn"
redundant_feature_names = "warn"
redundant_pub_crate = "warn"
redundant_type_annotations = "warn"
ref_binding_to_reference = "warn"
ref_option = "warn"
ref_option_ref = "warn"
ref_patterns = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_functions_in_if_condition = "warn"
same_name_method = "warn"
self_named_module_files = "deny"
semicolon_if_nothing_returned = "warn"
set_contains_or_insert = "warn"
shadow_same = "warn"
shadow_unrelated = "warn"
single_char_lifetime_names = "warn"
str_split_at_newline = "warn"
str_to_string = "warn"
string_lit_chars_any = "warn"
string_to_string = "warn"
suboptimal_flops = "warn"
suspicious_xor_used_as_pow = "warn"
tests_outside_test_module = "warn"
todo = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "warn"
trivially_copy_pass_by_ref = "warn"
try_err = "warn"
type_repetition_in_bounds = "warn"
unchecked_duration_subtraction = "warn"
unimplemented = "warn"
uninhabited_references = "warn"
uninlined_format_args = "warn"
unnecessary_box_returns = "warn"
unnecessary_join = "warn"
unnecessary_literal_bound = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "warn"
unnecessary_struct_initialization = "warn"
unnecessary_wraps = "warn"
unneeded_field_pattern = "warn"
unneeded_wildcard_pattern = "warn"
unnested_or_patterns = "warn"
unreadable_literal = "warn"
unused_async = "warn"
unused_peekable = "warn"
unused_result_ok = "warn"
unused_rounding = "warn"
unused_self = "warn"
unused_trait_names = "warn"
used_underscore_binding = "warn"
used_underscore_items = "warn"
useless_let_if_seq = "warn"
verbose_bit_mask = "warn"
verbose_file_reads = "warn"
while_float = "warn"
wildcard_dependencies = "warn"
wildcard_imports = "deny"
zero_sized_map_values = "deny"
